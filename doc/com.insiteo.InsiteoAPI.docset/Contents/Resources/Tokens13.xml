<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/ISCommonFunctions.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/ISCommonFunctions</TokenIdentifier>
			<Abstract type="html">Static class used to provide general help functions.</Abstract>
			<DeclaredIn>ISCommonFunctions.h</DeclaredIn>
			
			<NodeRef refid="13"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/ISCommonFunctions/compareBytesArrayWithArray1:andArray2:andLength:</TokenIdentifier>
			<Abstract type="html">Method called to compare two bytes array.</Abstract>
			<DeclaredIn>ISCommonFunctions.h</DeclaredIn>			
			
			<Declaration>+ (Boolean)compareBytesArrayWithArray1:(unsigned char *)array1 andArray2:(unsigned char *)array2 andLength:(int)length</Declaration>
			<Parameters>
				<Parameter>
					<Name>array1</Name>
					<Abstract type="html">First bytes array to compare.</Abstract>
				</Parameter><Parameter>
					<Name>array2</Name>
					<Abstract type="html">Second bytes array to compare.</Abstract>
				</Parameter><Parameter>
					<Name>length</Name>
					<Abstract type="html">Arrays length.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">&lt;b&gt;YES&lt;/b&gt; if equals, else &lt;b&gt;NO&lt;/b&gt;.</Abstract></ReturnValue>
			<Anchor>//api/name/compareBytesArrayWithArray1:andArray2:andLength:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/ISCommonFunctions/hexToBytes:</TokenIdentifier>
			<Abstract type="html">Method used to convert hexadecimal NSString in NSData.</Abstract>
			<DeclaredIn>ISCommonFunctions.h</DeclaredIn>			
			
			<Declaration>+ (NSData *)hexToBytes:(NSString *)hexString</Declaration>
			<Parameters>
				<Parameter>
					<Name>hexString</Name>
					<Abstract type="html">The hexadecimal NSString to convert.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The converted NSData.</Abstract></ReturnValue>
			<Anchor>//api/name/hexToBytes:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/ISCommonFunctions/eucledianDistanceFromPoint:toPoint:</TokenIdentifier>
			<Abstract type="html">Method used to get the eucledian distance between two points.</Abstract>
			<DeclaredIn>ISCommonFunctions.h</DeclaredIn>			
			
			<Declaration>+ (float)eucledianDistanceFromPoint:(CGPoint)from toPoint:(CGPoint)to</Declaration>
			<Parameters>
				<Parameter>
					<Name>from</Name>
					<Abstract type="html">First point.</Abstract>
				</Parameter><Parameter>
					<Name>to</Name>
					<Abstract type="html">Second point.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The resulted eucledian distance.</Abstract></ReturnValue>
			<Anchor>//api/name/eucledianDistanceFromPoint:toPoint:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/ISCommonFunctions/fileMD5:</TokenIdentifier>
			<Abstract type="html">Method used to get the MD5 NSString of a specific file.</Abstract>
			<DeclaredIn>ISCommonFunctions.h</DeclaredIn>			
			
			<Declaration>+ (NSString *)fileMD5:(NSString *)path</Declaration>
			<Parameters>
				<Parameter>
					<Name>path</Name>
					<Abstract type="html">Path where the file to use is located.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The resulted NSString MD5.</Abstract></ReturnValue>
			<Anchor>//api/name/fileMD5:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/ISCommonFunctions/stringMD5:</TokenIdentifier>
			<Abstract type="html">Method used to get the MD5 NSString of a specific NSString.</Abstract>
			<DeclaredIn>ISCommonFunctions.h</DeclaredIn>			
			
			<Declaration>+ (NSString *)stringMD5:(NSString *)str</Declaration>
			<Parameters>
				<Parameter>
					<Name>str</Name>
					<Abstract type="html">NSString to hash.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The resulted NSString MD5.</Abstract></ReturnValue>
			<Anchor>//api/name/stringMD5:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/ISCommonFunctions/checkNilString:</TokenIdentifier>
			<Abstract type="html">Method used to check the NSString nullity.</Abstract>
			<DeclaredIn>ISCommonFunctions.h</DeclaredIn>			
			
			<Declaration>+ (NSString *)checkNilString:(NSString *)stringToCheck</Declaration>
			<Parameters>
				<Parameter>
					<Name>stringToCheck</Name>
					<Abstract type="html">The NSString to check.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The resulted NSString checked.</Abstract></ReturnValue>
			<Anchor>//api/name/checkNilString:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/ISCommonFunctions/stringByStrippingHTML:</TokenIdentifier>
			<Abstract type="html">Method used to remove HTML tags from an NSString.</Abstract>
			<DeclaredIn>ISCommonFunctions.h</DeclaredIn>			
			
			<Declaration>+ (NSString *)stringByStrippingHTML:(NSString *)htmlString</Declaration>
			<Parameters>
				<Parameter>
					<Name>htmlString</Name>
					<Abstract type="html">The NSString to use.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The resulted NSString filtered.</Abstract></ReturnValue>
			<Anchor>//api/name/stringByStrippingHTML:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/ISCommonFunctions/degreesToRadians:</TokenIdentifier>
			<Abstract type="html">Method used to convert a degrees angle to radians.</Abstract>
			<DeclaredIn>ISCommonFunctions.h</DeclaredIn>			
			
			<Declaration>+ (float)degreesToRadians:(float)degrees</Declaration>
			<Parameters>
				<Parameter>
					<Name>degrees</Name>
					<Abstract type="html">Degrees angle.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The converted radians angle.</Abstract></ReturnValue>
			<Anchor>//api/name/degreesToRadians:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/ISCommonFunctions/radiansToDegrees:</TokenIdentifier>
			<Abstract type="html">Method used to convert a radians angle to degrees.</Abstract>
			<DeclaredIn>ISCommonFunctions.h</DeclaredIn>			
			
			<Declaration>+ (float)radiansToDegrees:(float)radians</Declaration>
			<Parameters>
				<Parameter>
					<Name>radians</Name>
					<Abstract type="html">Radians angle.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The converted degrees angle.</Abstract></ReturnValue>
			<Anchor>//api/name/radiansToDegrees:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/ISCommonFunctions/getMStime</TokenIdentifier>
			<Abstract type="html">Static method used to get the current time in milliseconds.</Abstract>
			<DeclaredIn>ISCommonFunctions.h</DeclaredIn>			
			
			<Declaration>+ (int64_t)getMStime</Declaration>
			
			<ReturnValue><Abstract type="html">The current time in milliseconds.</Abstract></ReturnValue>
			<Anchor>//api/name/getMStime</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/ISCommonFunctions/getFreeMemory</TokenIdentifier>
			<Abstract type="html">Static method used to get the current free memory.</Abstract>
			<DeclaredIn>ISCommonFunctions.h</DeclaredIn>			
			
			<Declaration>+ (natural_t)getFreeMemory</Declaration>
			
			<ReturnValue><Abstract type="html">The current free memory.</Abstract></ReturnValue>
			<Anchor>//api/name/getFreeMemory</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/ISCommonFunctions/appendText:toFile:</TokenIdentifier>
			<Abstract type="html">Static method used to append two NSString.</Abstract>
			<DeclaredIn>ISCommonFunctions.h</DeclaredIn>			
			
			<Declaration>+ (void)appendText:(NSString *)text toFile:(NSString *)filePath</Declaration>
			<Parameters>
				<Parameter>
					<Name>text</Name>
					<Abstract type="html">The first NSString to append.</Abstract>
				</Parameter><Parameter>
					<Name>filePath</Name>
					<Abstract type="html">The second NSString to append.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/appendText:toFile:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/ISCommonFunctions/isWiFiAvailable</TokenIdentifier>
			<Abstract type="html">Static method used to know if the WIFI is currently available.</Abstract>
			<DeclaredIn>ISCommonFunctions.h</DeclaredIn>			
			
			<Declaration>+ (Boolean)isWiFiAvailable</Declaration>
			
			<ReturnValue><Abstract type="html">&lt;b&gt;YES&lt;/b&gt; if the WIFI is available, otherwise &lt;b&gt;NO&lt;/b&gt;.</Abstract></ReturnValue>
			<Anchor>//api/name/isWiFiAvailable</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/ISCommonFunctions/rayWithValue:</TokenIdentifier>
			<Abstract type="html">Static method used to get a CC3Ray from an NSValue.</Abstract>
			<DeclaredIn>ISCommonFunctions.h</DeclaredIn>			
			
			<Declaration>+ (CC3Ray)rayWithValue:(NSValue *)value</Declaration>
			<Parameters>
				<Parameter>
					<Name>value</Name>
					<Abstract type="html">NSValue containing the CC3Ray.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The corresponding CC3Ray.</Abstract></ReturnValue>
			<Anchor>//api/name/rayWithValue:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/ISCommonFunctions/rayValue:</TokenIdentifier>
			<Abstract type="html">Static method used to convert a CC3Ray to an NSValue.</Abstract>
			<DeclaredIn>ISCommonFunctions.h</DeclaredIn>			
			
			<Declaration>+ (NSValue *)rayValue:(CC3Ray)ray</Declaration>
			<Parameters>
				<Parameter>
					<Name>ray</Name>
					<Abstract type="html">The CC3Ray to convert.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The corresponding NSValue.</Abstract></ReturnValue>
			<Anchor>//api/name/rayValue:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/ISCommonFunctions/vector4WithValue:</TokenIdentifier>
			<Abstract type="html">Static method used to get a CC3Vector4 from an NSValue.</Abstract>
			<DeclaredIn>ISCommonFunctions.h</DeclaredIn>			
			
			<Declaration>+ (CC3Vector4)vector4WithValue:(NSValue *)value</Declaration>
			<Parameters>
				<Parameter>
					<Name>value</Name>
					<Abstract type="html">NSValue containing the CC3Vector4.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The corresponding CC3Vector4.</Abstract></ReturnValue>
			<Anchor>//api/name/vector4WithValue:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/ISCommonFunctions/vector4Value:</TokenIdentifier>
			<Abstract type="html">Static method used to convert a CC3Vector4 to an NSValue.</Abstract>
			<DeclaredIn>ISCommonFunctions.h</DeclaredIn>			
			
			<Declaration>+ (NSValue *)vector4Value:(CC3Vector4)vector</Declaration>
			<Parameters>
				<Parameter>
					<Name>vector</Name>
					<Abstract type="html">The CC3Vector4 to convert.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The corresponding NSValue.</Abstract></ReturnValue>
			<Anchor>//api/name/vector4Value:</Anchor>
		</Token>
		
	</File>
</Tokens>