<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/ISInitParameters.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/ISInitParameters</TokenIdentifier>
			<Abstract type="html">Class used to define API initialization parameters.</Abstract>
			<DeclaredIn>ISInitParameters.h</DeclaredIn>
			
			<NodeRef refid="32"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ISInitParameters/setServerUrl:</TokenIdentifier>
			<Abstract type="html">Server URL to use.</Abstract>
			<DeclaredIn>ISInitParameters.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) NSString *serverUrl</Declaration>
			
			
			<Anchor>//api/name/serverUrl</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/ISInitParameters/serverUrl</TokenIdentifier>
			<Abstract type="html">Server URL to use.</Abstract>
			<DeclaredIn>ISInitParameters.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) NSString *serverUrl</Declaration>
			
			
			<Anchor>//api/name/serverUrl</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ISInitParameters/setSiteId:</TokenIdentifier>
			<Abstract type="html">Site identifier to use.</Abstract>
			<DeclaredIn>ISInitParameters.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite) int siteId</Declaration>
			
			
			<Anchor>//api/name/siteId</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/ISInitParameters/siteId</TokenIdentifier>
			<Abstract type="html">Site identifier to use.</Abstract>
			<DeclaredIn>ISInitParameters.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite) int siteId</Declaration>
			
			
			<Anchor>//api/name/siteId</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ISInitParameters/setApplicationVersion:</TokenIdentifier>
			<Abstract type="html">Application version to use.</Abstract>
			<DeclaredIn>ISInitParameters.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite) int applicationVersion</Declaration>
			
			
			<Anchor>//api/name/applicationVersion</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/ISInitParameters/applicationVersion</TokenIdentifier>
			<Abstract type="html">Application version to use.</Abstract>
			<DeclaredIn>ISInitParameters.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite) int applicationVersion</Declaration>
			
			
			<Anchor>//api/name/applicationVersion</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ISInitParameters/setLanguage:</TokenIdentifier>
			<Abstract type="html">Language to use.</Abstract>
			<DeclaredIn>ISInitParameters.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) NSString *language</Declaration>
			
			
			<Anchor>//api/name/language</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/ISInitParameters/language</TokenIdentifier>
			<Abstract type="html">Language to use.</Abstract>
			<DeclaredIn>ISInitParameters.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) NSString *language</Declaration>
			
			
			<Anchor>//api/name/language</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ISInitParameters/setServerType:</TokenIdentifier>
			<Abstract type="html">INSITEO server type.</Abstract>
			<DeclaredIn>ISInitParameters.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite) ISEServerType serverType</Declaration>
			
			
			<Anchor>//api/name/serverType</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/ISInitParameters/serverType</TokenIdentifier>
			<Abstract type="html">INSITEO server type.</Abstract>
			<DeclaredIn>ISInitParameters.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite) ISEServerType serverType</Declaration>
			
			
			<Anchor>//api/name/serverType</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ISInitParameters/setForceDownload:</TokenIdentifier>
			<Abstract type="html">Boolean used to know if we force the download of packages even if the application is up to date.</Abstract>
			<DeclaredIn>ISInitParameters.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite) Boolean forceDownload</Declaration>
			
			
			<Anchor>//api/name/forceDownload</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/ISInitParameters/forceDownload</TokenIdentifier>
			<Abstract type="html">Boolean used to know if we force the download of packages even if the application is up to date.</Abstract>
			<DeclaredIn>ISInitParameters.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite) Boolean forceDownload</Declaration>
			
			
			<Anchor>//api/name/forceDownload</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ISInitParameters/setRenderMode:</TokenIdentifier>
			<Abstract type="html">Current map render mode (2D or 3D).</Abstract>
			<DeclaredIn>ISInitParameters.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite) ISERenderMode renderMode</Declaration>
			
			
			<Anchor>//api/name/renderMode</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/ISInitParameters/renderMode</TokenIdentifier>
			<Abstract type="html">Current map render mode (2D or 3D).</Abstract>
			<DeclaredIn>ISInitParameters.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite) ISERenderMode renderMode</Declaration>
			
			
			<Anchor>//api/name/renderMode</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/ISInitParameters/getServerTypeString:</TokenIdentifier>
			<Abstract type="html">Static method used to get the server type NSString identifier.</Abstract>
			<DeclaredIn>ISInitParameters.h</DeclaredIn>			
			
			<Declaration>+ (NSString *)getServerTypeString:(ISEServerType)serverType</Declaration>
			<Parameters>
				<Parameter>
					<Name>serverType</Name>
					<Abstract type="html">INSITEO server type.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The related NSString.</Abstract></ReturnValue>
			<Anchor>//api/name/getServerTypeString:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/ISInitParameters/getServerTypeStringForURL:</TokenIdentifier>
			<Abstract type="html">Static method used to get the server NSString for use in URLs.</Abstract>
			<DeclaredIn>ISInitParameters.h</DeclaredIn>			
			
			<Declaration>+ (NSString *)getServerTypeStringForURL:(ISEServerType)serverType</Declaration>
			<Parameters>
				<Parameter>
					<Name>serverType</Name>
					<Abstract type="html">INSITEO server type.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The related NSString to use in URLs only.</Abstract></ReturnValue>
			<Anchor>//api/name/getServerTypeStringForURL:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ISInitParameters/initWithServerUrl:andSiteId:andApplicationVersion:andLanguage:andForceDownload:andServerType:andRenderMode:</TokenIdentifier>
			<Abstract type="html">Main constructor.</Abstract>
			<DeclaredIn>ISInitParameters.h</DeclaredIn>			
			
			<Declaration>- (id)initWithServerUrl:(NSString *)serverUrl andSiteId:(int)siteId andApplicationVersion:(int)applicationVersion andLanguage:(NSString *)language andForceDownload:(Boolean)forceDownload andServerType:(ISEServerType)serverType andRenderMode:(ISERenderMode)renderMode</Declaration>
			<Parameters>
				<Parameter>
					<Name>serverUrl</Name>
					<Abstract type="html">The server URL to use.</Abstract>
				</Parameter><Parameter>
					<Name>siteId</Name>
					<Abstract type="html">The site identifier to use.</Abstract>
				</Parameter><Parameter>
					<Name>applicationVersion</Name>
					<Abstract type="html">The application version to use.</Abstract>
				</Parameter><Parameter>
					<Name>language</Name>
					<Abstract type="html">The language to use.</Abstract>
				</Parameter><Parameter>
					<Name>forceDownload</Name>
					<Abstract type="html">Boolean used to know if we force the download of packages even if the application is up to date.</Abstract>
				</Parameter><Parameter>
					<Name>serverType</Name>
					<Abstract type="html">INSITEO server type to communicate with.</Abstract>
				</Parameter><Parameter>
					<Name>renderMode</Name>
					<Abstract type="html">Wanted render mode.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/initWithServerUrl:andSiteId:andApplicationVersion:andLanguage:andForceDownload:andServerType:andRenderMode:</Anchor>
		</Token>
		
	</File>
</Tokens>