<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Protocols/ISPBeaconListener.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intf/ISPBeaconListener</TokenIdentifier>
			<Abstract type="html">Protocol used to handle Beacon events.</Abstract>
			<DeclaredIn>ISPBeaconListener.h</DeclaredIn>
			
			<NodeRef refid="81"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/ISPBeaconListener/onEnterBeaconRegion:</TokenIdentifier>
			<Abstract type="html">Method called when the user enters in a monitored beaconRegion.</Abstract>
			<DeclaredIn>ISPBeaconListener.h</DeclaredIn>			
			
			<Declaration>- (void)onEnterBeaconRegion:(ISBeaconRegion *)beaconRegion</Declaration>
			<Parameters>
				<Parameter>
					<Name>beaconRegion</Name>
					<Abstract type="html">The beacon region the user enters in.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/onEnterBeaconRegion:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/ISPBeaconListener/onExitBeaconRegion:</TokenIdentifier>
			<Abstract type="html">Method called when the user exits a monitored beaconRegion.</Abstract>
			<DeclaredIn>ISPBeaconListener.h</DeclaredIn>			
			
			<Declaration>- (void)onExitBeaconRegion:(ISBeaconRegion *)beaconRegion</Declaration>
			<Parameters>
				<Parameter>
					<Name>beaconRegion</Name>
					<Abstract type="html">The ISBeaconRegion the user exits.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/onExitBeaconRegion:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/ISPBeaconListener/onEnterBeacon:forRegion:andProximity:</TokenIdentifier>
			<Abstract type="html">Method called when the beacon proximity is reached for an entered beaconRegion.</Abstract>
			<DeclaredIn>ISPBeaconListener.h</DeclaredIn>			
			
			<Declaration>- (void)onEnterBeacon:(ISBeacon *)beacon forRegion:(ISBeaconRegion *)beaconRegion andProximity:(CLProximity)proximity</Declaration>
			<Parameters>
				<Parameter>
					<Name>beacon</Name>
					<Abstract type="html">The beacon with reached proximity.</Abstract>
				</Parameter><Parameter>
					<Name>beaconRegion</Name>
					<Abstract type="html">The beaconRegion associated to the beacon with reached proximity.</Abstract>
				</Parameter><Parameter>
					<Name>proximity</Name>
					<Abstract type="html">The proximity reached.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/onEnterBeacon:forRegion:andProximity:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/ISPBeaconListener/onExitBeacon:forRegion:andProximity:</TokenIdentifier>
			<Abstract type="html">Method called when the beacon proximity is not reached anymore for an entered beaconRegion.</Abstract>
			<DeclaredIn>ISPBeaconListener.h</DeclaredIn>			
			
			<Declaration>- (void)onExitBeacon:(ISBeacon *)beacon forRegion:(ISBeaconRegion *)beaconRegion andProximity:(CLProximity)proximity</Declaration>
			<Parameters>
				<Parameter>
					<Name>beacon</Name>
					<Abstract type="html">The beacon with proximity CLProximityFar or CLProximityUnknown.</Abstract>
				</Parameter><Parameter>
					<Name>beaconRegion</Name>
					<Abstract type="html">The beaconRegion associated to the beacon with the no more reached proximity.</Abstract>
				</Parameter><Parameter>
					<Name>proximity</Name>
					<Abstract type="html">The new proximity.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/onExitBeacon:forRegion:andProximity:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/ISPBeaconListener/shouldPresentLocalNotificationOnBeaconRegionEntry:</TokenIdentifier>
			<Abstract type="html">Method used to let the ISBeaconProvider managing the UILocalNotification presentation on a beaconRegion entry.</Abstract>
			<DeclaredIn>ISPBeaconListener.h</DeclaredIn>			
			
			<Declaration>- (BOOL)shouldPresentLocalNotificationOnBeaconRegionEntry:(ISBeaconRegion *)beaconRegion</Declaration>
			<Parameters>
				<Parameter>
					<Name>beaconRegion</Name>
					<Abstract type="html">The beacon region the user enters in.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">If the ISBeaconProvider should manage the UILocalNotification presentation. YES, by default.</Abstract></ReturnValue>
			<Anchor>//api/name/shouldPresentLocalNotificationOnBeaconRegionEntry:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/ISPBeaconListener/firstRangedISBeacon:onEntryforRegion:withError:</TokenIdentifier>
			<Abstract type="html">Method used to get the first ranged beacon on a beaconRegion entry.</Abstract>
			<DeclaredIn>ISPBeaconListener.h</DeclaredIn>			
			
			<Declaration>- (void)firstRangedISBeacon:(ISBeacon *)beacon onEntryforRegion:(ISBeaconRegion *)beaconRegion withError:(NSError *)error</Declaration>
			<Parameters>
				<Parameter>
					<Name>beacon</Name>
					<Abstract type="html">The first ranged ISBeacon in region.</Abstract>
				</Parameter><Parameter>
					<Name>beaconRegion</Name>
					<Abstract type="html">The ranged beaconRegion.</Abstract>
				</Parameter><Parameter>
					<Name>error</Name>
					<Abstract type="html">If ranging has failed for region, else nil.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/firstRangedISBeacon:onEntryforRegion:withError:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/ISPBeaconListener/rangedISBeacons:andReachedProximityBeacons:inRegion:withError:</TokenIdentifier>
			<Abstract type="html">Method used to get all ranged beacons in an entered beaconRegion and all beacons which have reached the region proximity.</Abstract>
			<DeclaredIn>ISPBeaconListener.h</DeclaredIn>			
			
			<Declaration>- (void)rangedISBeacons:(NSArray *)beacons andReachedProximityBeacons:(NSArray *)reachedProximityBeacons inRegion:(ISBeaconRegion *)beaconRegion withError:(NSError *)error</Declaration>
			<Parameters>
				<Parameter>
					<Name>beacons</Name>
					<Abstract type="html">All ranged beacons, nil if an error occured.</Abstract>
				</Parameter><Parameter>
					<Name>reachedProximityBeacons</Name>
					<Abstract type="html">beacons which have reached the region proximity, nil if an error occured.</Abstract>
				</Parameter><Parameter>
					<Name>beaconRegion</Name>
					<Abstract type="html">The ranged beaconRegion.</Abstract>
				</Parameter><Parameter>
					<Name>error</Name>
					<Abstract type="html">If ranging for the region has failed.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/rangedISBeacons:andReachedProximityBeacons:inRegion:withError:</Anchor>
		</Token>
		
	</File>
</Tokens>