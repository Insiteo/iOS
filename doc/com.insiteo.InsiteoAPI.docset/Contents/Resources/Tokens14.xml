<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/ISGenericRTO.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/ISGenericRTO</TokenIdentifier>
			<Abstract type="html">Class which represent a basic RTO object (name + pin image).</Abstract>
			<DeclaredIn>ISGenericRTO.h</DeclaredIn>
			
			<NodeRef refid="14"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ISGenericRTO/setMetersPosition:</TokenIdentifier>
			<Abstract type="html">RTO position in meters.</Abstract>
			<DeclaredIn>ISGenericRTO.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) ISPosition *metersPosition</Declaration>
			
			
			<Anchor>//api/name/metersPosition</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/ISGenericRTO/metersPosition</TokenIdentifier>
			<Abstract type="html">RTO position in meters.</Abstract>
			<DeclaredIn>ISGenericRTO.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) ISPosition *metersPosition</Declaration>
			
			
			<Anchor>//api/name/metersPosition</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ISGenericRTO/setCurrentMap:</TokenIdentifier>
			<Abstract type="html">Current rendering map.</Abstract>
			<DeclaredIn>ISGenericRTO.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) ISMap *currentMap</Declaration>
			
			
			<Anchor>//api/name/currentMap</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/ISGenericRTO/currentMap</TokenIdentifier>
			<Abstract type="html">Current rendering map.</Abstract>
			<DeclaredIn>ISGenericRTO.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) ISMap *currentMap</Declaration>
			
			
			<Anchor>//api/name/currentMap</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ISGenericRTO/setDraggable:</TokenIdentifier>
			<Abstract type="html">Boolean used to know if the RTO is draggable.</Abstract>
			<DeclaredIn>ISGenericRTO.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite) Boolean draggable</Declaration>
			
			
			<Anchor>//api/name/draggable</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/ISGenericRTO/draggable</TokenIdentifier>
			<Abstract type="html">Boolean used to know if the RTO is draggable.</Abstract>
			<DeclaredIn>ISGenericRTO.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite) Boolean draggable</Declaration>
			
			
			<Anchor>//api/name/draggable</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ISGenericRTO/setActionButtonClicked:</TokenIdentifier>
			<Abstract type="html">Boolean used to know if the action button was clicked.</Abstract>
			<DeclaredIn>ISGenericRTO.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) Boolean actionButtonClicked</Declaration>
			
			
			<Anchor>//api/name/actionButtonClicked</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/ISGenericRTO/actionButtonClicked</TokenIdentifier>
			<Abstract type="html">Boolean used to know if the action button was clicked.</Abstract>
			<DeclaredIn>ISGenericRTO.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) Boolean actionButtonClicked</Declaration>
			
			
			<Anchor>//api/name/actionButtonClicked</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ISGenericRTO/setRtoNode:</TokenIdentifier>
			<Abstract type="html">Related 2D render node.</Abstract>
			<DeclaredIn>ISGenericRTO.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) ISGenericRTONode *rtoNode</Declaration>
			
			
			<Anchor>//api/name/rtoNode</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/ISGenericRTO/rtoNode</TokenIdentifier>
			<Abstract type="html">Related 2D render node.</Abstract>
			<DeclaredIn>ISGenericRTO.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) ISGenericRTONode *rtoNode</Declaration>
			
			
			<Anchor>//api/name/rtoNode</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ISGenericRTO/setCurrentScene:</TokenIdentifier>
			<Abstract type="html">Current 3D scene (for 3D rendering only).</Abstract>
			<DeclaredIn>ISGenericRTO.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign) CC3Scene *currentScene</Declaration>
			
			
			<Anchor>//api/name/currentScene</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/ISGenericRTO/currentScene</TokenIdentifier>
			<Abstract type="html">Current 3D scene (for 3D rendering only).</Abstract>
			<DeclaredIn>ISGenericRTO.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign) CC3Scene *currentScene</Declaration>
			
			
			<Anchor>//api/name/currentScene</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ISGenericRTO/setWindowBackgroundColorNormal:</TokenIdentifier>
			<Abstract type="html">RTO window background color for normal state.</Abstract>
			<DeclaredIn>ISGenericRTO.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) UIColor *windowBackgroundColorNormal</Declaration>
			
			
			<Anchor>//api/name/windowBackgroundColorNormal</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/ISGenericRTO/windowBackgroundColorNormal</TokenIdentifier>
			<Abstract type="html">RTO window background color for normal state.</Abstract>
			<DeclaredIn>ISGenericRTO.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) UIColor *windowBackgroundColorNormal</Declaration>
			
			
			<Anchor>//api/name/windowBackgroundColorNormal</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ISGenericRTO/setWindowBackgroundColorHighlighted:</TokenIdentifier>
			<Abstract type="html">RTO window background color for highlighted state.</Abstract>
			<DeclaredIn>ISGenericRTO.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) UIColor *windowBackgroundColorHighlighted</Declaration>
			
			
			<Anchor>//api/name/windowBackgroundColorHighlighted</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/ISGenericRTO/windowBackgroundColorHighlighted</TokenIdentifier>
			<Abstract type="html">RTO window background color for highlighted state.</Abstract>
			<DeclaredIn>ISGenericRTO.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) UIColor *windowBackgroundColorHighlighted</Declaration>
			
			
			<Anchor>//api/name/windowBackgroundColorHighlighted</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ISGenericRTO/setActionEnabled:</TokenIdentifier>
			<Abstract type="html">Boolean used to know if the left action button is enabled.</Abstract>
			<DeclaredIn>ISGenericRTO.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite) Boolean actionEnabled</Declaration>
			
			
			<Anchor>//api/name/actionEnabled</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/ISGenericRTO/actionEnabled</TokenIdentifier>
			<Abstract type="html">Boolean used to know if the left action button is enabled.</Abstract>
			<DeclaredIn>ISGenericRTO.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite) Boolean actionEnabled</Declaration>
			
			
			<Anchor>//api/name/actionEnabled</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ISGenericRTO/setActionImagePath:</TokenIdentifier>
			<Abstract type="html">RTO action button sprite image path.</Abstract>
			<DeclaredIn>ISGenericRTO.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) NSString *actionImagePath</Declaration>
			
			
			<Anchor>//api/name/actionImagePath</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/ISGenericRTO/actionImagePath</TokenIdentifier>
			<Abstract type="html">RTO action button sprite image path.</Abstract>
			<DeclaredIn>ISGenericRTO.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) NSString *actionImagePath</Declaration>
			
			
			<Anchor>//api/name/actionImagePath</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ISGenericRTO/setActionBackgroundColorNormal:</TokenIdentifier>
			<Abstract type="html">RTO action button background color for normal state.</Abstract>
			<DeclaredIn>ISGenericRTO.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) UIColor *actionBackgroundColorNormal</Declaration>
			
			
			<Anchor>//api/name/actionBackgroundColorNormal</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/ISGenericRTO/actionBackgroundColorNormal</TokenIdentifier>
			<Abstract type="html">RTO action button background color for normal state.</Abstract>
			<DeclaredIn>ISGenericRTO.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) UIColor *actionBackgroundColorNormal</Declaration>
			
			
			<Anchor>//api/name/actionBackgroundColorNormal</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ISGenericRTO/setActionBackgroundColorHighlighted:</TokenIdentifier>
			<Abstract type="html">RTO action button background color for highlighted state.</Abstract>
			<DeclaredIn>ISGenericRTO.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) UIColor *actionBackgroundColorHighlighted</Declaration>
			
			
			<Anchor>//api/name/actionBackgroundColorHighlighted</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/ISGenericRTO/actionBackgroundColorHighlighted</TokenIdentifier>
			<Abstract type="html">RTO action button background color for highlighted state.</Abstract>
			<DeclaredIn>ISGenericRTO.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) UIColor *actionBackgroundColorHighlighted</Declaration>
			
			
			<Anchor>//api/name/actionBackgroundColorHighlighted</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ISGenericRTO/setIndicatorVisible:</TokenIdentifier>
			<Abstract type="html">Boolean used to know if the right indicator is visible.</Abstract>
			<DeclaredIn>ISGenericRTO.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite) Boolean indicatorVisible</Declaration>
			
			
			<Anchor>//api/name/indicatorVisible</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/ISGenericRTO/indicatorVisible</TokenIdentifier>
			<Abstract type="html">Boolean used to know if the right indicator is visible.</Abstract>
			<DeclaredIn>ISGenericRTO.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readwrite) Boolean indicatorVisible</Declaration>
			
			
			<Anchor>//api/name/indicatorVisible</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ISGenericRTO/setIndicatorImagePath:</TokenIdentifier>
			<Abstract type="html">RTO indicator sprite image path.</Abstract>
			<DeclaredIn>ISGenericRTO.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) NSString *indicatorImagePath</Declaration>
			
			
			<Anchor>//api/name/indicatorImagePath</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/ISGenericRTO/indicatorImagePath</TokenIdentifier>
			<Abstract type="html">RTO indicator sprite image path.</Abstract>
			<DeclaredIn>ISGenericRTO.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) NSString *indicatorImagePath</Declaration>
			
			
			<Anchor>//api/name/indicatorImagePath</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ISGenericRTO/setWindowAnchorImagePath:</TokenIdentifier>
			<Abstract type="html">RTO window anchor sprite image path.</Abstract>
			<DeclaredIn>ISGenericRTO.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) NSString *windowAnchorImagePath</Declaration>
			
			
			<Anchor>//api/name/windowAnchorImagePath</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/ISGenericRTO/windowAnchorImagePath</TokenIdentifier>
			<Abstract type="html">RTO window anchor sprite image path.</Abstract>
			<DeclaredIn>ISGenericRTO.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) NSString *windowAnchorImagePath</Declaration>
			
			
			<Anchor>//api/name/windowAnchorImagePath</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ISGenericRTO/setMarkerImagePath:</TokenIdentifier>
			<Abstract type="html">RTO marker sprite image path.</Abstract>
			<DeclaredIn>ISGenericRTO.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) NSString *markerImagePath</Declaration>
			
			
			<Anchor>//api/name/markerImagePath</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/ISGenericRTO/markerImagePath</TokenIdentifier>
			<Abstract type="html">RTO marker sprite image path.</Abstract>
			<DeclaredIn>ISGenericRTO.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) NSString *markerImagePath</Declaration>
			
			
			<Anchor>//api/name/markerImagePath</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ISGenericRTO/initWithName:andLabel:andMetersPosition:andWindowDisplayed:andLabelDisplayed:</TokenIdentifier>
			<Abstract type="html">Main constructor</Abstract>
			<DeclaredIn>ISGenericRTO.h</DeclaredIn>			
			
			<Declaration>- (id)initWithName:(NSString *)name andLabel:(NSString *)label andMetersPosition:(ISPosition *)metersPosition andWindowDisplayed:(Boolean)windowDisplayed andLabelDisplayed:(Boolean)labelDisplayed</Declaration>
			<Parameters>
				<Parameter>
					<Name>name</Name>
					<Abstract type="html">RTO displayed name.</Abstract>
				</Parameter><Parameter>
					<Name>label</Name>
					<Abstract type="html">RTO displayed label.</Abstract>
				</Parameter><Parameter>
					<Name>metersPosition</Name>
					<Abstract type="html">RTO position in meters (could be nil in case of zone rendering).</Abstract>
				</Parameter><Parameter>
					<Name>windowDisplayed</Name>
					<Abstract type="html">Boolean used to know if the RTO window has to be displayed.</Abstract>
				</Parameter><Parameter>
					<Name>labelDisplayed</Name>
					<Abstract type="html">Boolean used to know if the RTO label has to be displayed.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/initWithName:andLabel:andMetersPosition:andWindowDisplayed:andLabelDisplayed:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ISGenericRTO/initWithName:andLabel:andMetersPosition:andWindowDisplayed:andLabelDisplayed:andWindowBackgroundColorNormal:andWindowBackgroundColorHighlighted:andActionEnabled:andActionImagePath:andActionBackgroundColorNormal:andActionBackgroundColorHighlighted:andIndicatorVisible:andIndicatorImagePath:andWindowAnchorImagePath:andMarkerImagePath:</TokenIdentifier>
			<Abstract type="html">Main constructor</Abstract>
			<DeclaredIn>ISGenericRTO.h</DeclaredIn>			
			
			<Declaration>- (id)initWithName:(NSString *)name andLabel:(NSString *)label andMetersPosition:(ISPosition *)metersPosition andWindowDisplayed:(Boolean)windowDisplayed andLabelDisplayed:(Boolean)labelDisplayed andWindowBackgroundColorNormal:(UIColor *)windowBackgroundColorNormal andWindowBackgroundColorHighlighted:(UIColor *)windowBackgroundColorHighlighted andActionEnabled:(Boolean)actionEnabled andActionImagePath:(NSString *)actionImagePath andActionBackgroundColorNormal:(UIColor *)actionBackgroundColorNormal andActionBackgroundColorHighlighted:(UIColor *)actionBackgroundColorHighlighted andIndicatorVisible:(Boolean)indicatorVisible andIndicatorImagePath:(NSString *)indicatorImagePath andWindowAnchorImagePath:(NSString *)windowAnchorImagePath andMarkerImagePath:(NSString *)markerImagePath</Declaration>
			<Parameters>
				<Parameter>
					<Name>name</Name>
					<Abstract type="html">RTO displayed name.</Abstract>
				</Parameter><Parameter>
					<Name>label</Name>
					<Abstract type="html">RTO displayed label.</Abstract>
				</Parameter><Parameter>
					<Name>metersPosition</Name>
					<Abstract type="html">RTO position in meters (could be nil in case of zone rendering).</Abstract>
				</Parameter><Parameter>
					<Name>windowDisplayed</Name>
					<Abstract type="html">Boolean used to know if the RTO window has to be displayed.</Abstract>
				</Parameter><Parameter>
					<Name>labelDisplayed</Name>
					<Abstract type="html">Boolean used to know if the RTO label has to be displayed.</Abstract>
				</Parameter><Parameter>
					<Name>windowBackgroundColorNormal</Name>
					<Abstract type="html">RTO window background color (normal state).</Abstract>
				</Parameter><Parameter>
					<Name>windowBackgroundColorHighlighted</Name>
					<Abstract type="html">RTO window background color (highlighted state).</Abstract>
				</Parameter><Parameter>
					<Name>actionEnabled</Name>
					<Abstract type="html">Boolean used to know if the action button is enabled.</Abstract>
				</Parameter><Parameter>
					<Name>actionImagePath</Name>
					<Abstract type="html">RTO action image path.</Abstract>
				</Parameter><Parameter>
					<Name>actionBackgroundColorNormal</Name>
					<Abstract type="html">RTO action image background color (normal state).</Abstract>
				</Parameter><Parameter>
					<Name>actionBackgroundColorHighlighted</Name>
					<Abstract type="html">RTO action image background color (highlighted state).</Abstract>
				</Parameter><Parameter>
					<Name>indicatorVisible</Name>
					<Abstract type="html">Boolean used to know if the right indicator is visible.</Abstract>
				</Parameter><Parameter>
					<Name>indicatorImagePath</Name>
					<Abstract type="html">RTO indicator image path.</Abstract>
				</Parameter><Parameter>
					<Name>windowAnchorImagePath</Name>
					<Abstract type="html">RTO window anchor image path.</Abstract>
				</Parameter><Parameter>
					<Name>markerImagePath</Name>
					<Abstract type="html">RTO marker image path.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/initWithName:andLabel:andMetersPosition:andWindowDisplayed:andLabelDisplayed:andWindowBackgroundColorNormal:andWindowBackgroundColorHighlighted:andActionEnabled:andActionImagePath:andActionBackgroundColorNormal:andActionBackgroundColorHighlighted:andIndicatorVisible:andIndicatorImagePath:andWindowAnchorImagePath:andMarkerImagePath:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ISGenericRTO/setLabelDisplayed:</TokenIdentifier>
			<Abstract type="html">Method used to set the RTO label as displayed or not.</Abstract>
			<DeclaredIn>ISGenericRTO.h</DeclaredIn>			
			
			<Declaration>- (void)setLabelDisplayed:(Boolean)displayed</Declaration>
			<Parameters>
				<Parameter>
					<Name>displayed</Name>
					<Abstract type="html">Boolean used to set the label display state.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setLabelDisplayed:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ISGenericRTO/shouldToggleWindowOnMarkerClicked</TokenIdentifier>
			<Abstract type="html">Method used to knwo if the RTO toggle its window when the marker was clicked.</Abstract>
			<DeclaredIn>ISGenericRTO.h</DeclaredIn>			
			
			<Declaration>- (Boolean)shouldToggleWindowOnMarkerClicked</Declaration>
			
			<ReturnValue><Abstract type="html">&lt;b&gt;YES&lt;/b&gt; if you want a toggle action, otherwise &lt;b&gt;NO&lt;/b&gt;.</Abstract></ReturnValue>
			<Anchor>//api/name/shouldToggleWindowOnMarkerClicked</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ISGenericRTO/hideWindow</TokenIdentifier>
			<Abstract type="html">Method called to hide the window.</Abstract>
			<DeclaredIn>ISGenericRTO.h</DeclaredIn>			
			
			<Declaration>- (void)hideWindow</Declaration>
			
			
			<Anchor>//api/name/hideWindow</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ISGenericRTO/showWindow</TokenIdentifier>
			<Abstract type="html">Method called to show the window.</Abstract>
			<DeclaredIn>ISGenericRTO.h</DeclaredIn>			
			
			<Declaration>- (void)showWindow</Declaration>
			
			
			<Anchor>//api/name/showWindow</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ISGenericRTO/toggleWindow</TokenIdentifier>
			<Abstract type="html">Method called to toggle RTO appearance.</Abstract>
			<DeclaredIn>ISGenericRTO.h</DeclaredIn>			
			
			<Declaration>- (void)toggleWindow</Declaration>
			
			
			<Anchor>//api/name/toggleWindow</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ISGenericRTO/setOver:</TokenIdentifier>
			<Abstract type="html">Method called to render the annotation as touched or not.</Abstract>
			<DeclaredIn>ISGenericRTO.h</DeclaredIn>			
			
			<Declaration>- (void)setOver:(Boolean)over</Declaration>
			<Parameters>
				<Parameter>
					<Name>over</Name>
					<Abstract type="html">&lt;b&gt;YES&lt;/b&gt; if you want a touched effect, otherwise &lt;b&gt;NO&lt;/b&gt;.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setOver:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ISGenericRTO/setOverAction:</TokenIdentifier>
			<Abstract type="html">Method called to render the action button as touched or not.</Abstract>
			<DeclaredIn>ISGenericRTO.h</DeclaredIn>			
			
			<Declaration>- (void)setOverAction:(Boolean)over</Declaration>
			<Parameters>
				<Parameter>
					<Name>over</Name>
					<Abstract type="html">&lt;b&gt;YES&lt;/b&gt; if you want a touched effect, otherwise &lt;b&gt;NO&lt;/b&gt;.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setOverAction:</Anchor>
		</Token>
		
	</File>
</Tokens>